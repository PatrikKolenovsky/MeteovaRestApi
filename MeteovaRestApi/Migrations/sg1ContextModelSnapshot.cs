// <auto-generated />
using System;
using Entities;
using Entities.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeteovaRestApi.Migrations
{
    [DbContext(typeof(Sg1Context))]
    partial class sg1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MeteovaRestApi.Models.Comtype", b =>
                {
                    b.Property<int>("ComTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ComTypeID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("ComTypeId");

                    b.ToTable("comtype");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DeviceID")
                        .HasColumnType("int(11)");

                    b.Property<string>("ComServIp")
                        .IsRequired()
                        .HasColumnName("ComServIP")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("ComServPort")
                        .HasColumnType("int(11)");

                    b.Property<int>("ComTypeId")
                        .HasColumnName("ComTypeID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("DeviceNameId")
                        .HasColumnName("DeviceNameID")
                        .HasColumnType("int(11)");

                    b.Property<bool>("InUse")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnName("IP")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Port")
                        .HasColumnType("int(11)");

                    b.HasKey("DeviceId");

                    b.HasIndex("ComTypeId")
                        .HasName("fk_DEVICE_COMTYPE1_idx");

                    b.HasIndex("DeviceNameId")
                        .HasName("fk_DEVICE_DEVICENAME1_idx");

                    b.ToTable("device");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Devicename", b =>
                {
                    b.Property<int>("DeviceNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DeviceNameID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("DeviceNameId");

                    b.ToTable("devicename");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LocationID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("LocationId");

                    b.ToTable("location");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Maker", b =>
                {
                    b.Property<int>("MakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MakerID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("MakerId");

                    b.ToTable("maker");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ModuleID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("DeviceId")
                        .HasColumnName("DeviceID")
                        .HasColumnType("int(11)");

                    b.Property<int>("LocationId")
                        .HasColumnName("LocationID")
                        .HasColumnType("int(11)");

                    b.Property<int>("ModuleTypeId")
                        .HasColumnName("ModuleTypeID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("ModuleId");

                    b.HasIndex("DeviceId")
                        .HasName("fk_MODULE_DEVICE1_idx");

                    b.HasIndex("LocationId")
                        .HasName("fk_MODULE_LOCATION1_idx");

                    b.HasIndex("ModuleTypeId")
                        .HasName("fk_MODULE_MODULETYPE1_idx");

                    b.ToTable("module");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Moduletype", b =>
                {
                    b.Property<int>("ModuleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ModuleTypeID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("MakerId")
                        .HasColumnName("MakerID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("ModuleTypeId");

                    b.HasIndex("MakerId")
                        .HasName("fk_MODULETYPE_MAKER1_idx");

                    b.ToTable("moduletype");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.TblMessages", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("messageID")
                        .HasColumnType("int(11)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnName("clientID")
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("DateTimeCreated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("DateTime_created")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.Property<bool?>("Enable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnName("message")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnName("topic")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("MessageId")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_messages");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Valint", b =>
                {
                    b.Property<long>("ValIntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ValIntID")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(3)")
                        .HasDefaultValueSql("'current_timestamp(3)'");

                    b.Property<int>("Value")
                        .HasColumnType("int(11)");

                    b.Property<int>("VariableId")
                        .HasColumnName("VariableID")
                        .HasColumnType("int(11)");

                    b.HasKey("ValIntId");

                    b.HasIndex("VariableId")
                        .HasName("fk_Int_Variable1_idx");

                    b.ToTable("valint");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Valreal", b =>
                {
                    b.Property<long>("ValRealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ValRealID")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(3)")
                        .HasDefaultValueSql("'current_timestamp(3)'");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.Property<int>("VariableId")
                        .HasColumnName("VariableID")
                        .HasColumnType("int(11)");

                    b.HasKey("ValRealId");

                    b.HasIndex("VariableId")
                        .HasName("fk_Real_Variable1_idx");

                    b.ToTable("valreal");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Valstring", b =>
                {
                    b.Property<long>("ValStringId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ValStringID")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(3)")
                        .HasDefaultValueSql("'current_timestamp(3)'");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("VariableId")
                        .HasColumnName("VariableID")
                        .HasColumnType("int(11)");

                    b.HasKey("ValStringId");

                    b.HasIndex("VariableId")
                        .HasName("fk_VALSTRING_VARIABLE1_idx");

                    b.ToTable("valstring");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Vardef", b =>
                {
                    b.Property<int>("VarDefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VarDefID")
                        .HasColumnType("int(11)");

                    b.Property<int>("ModuleTypeId")
                        .HasColumnName("ModuleTypeID")
                        .HasColumnType("int(11)");

                    b.Property<int>("VarNameId")
                        .HasColumnName("VarNameID")
                        .HasColumnType("int(11)");

                    b.Property<int>("VarTypeId")
                        .HasColumnName("VarTypeID")
                        .HasColumnType("int(11)");

                    b.HasKey("VarDefId");

                    b.HasIndex("ModuleTypeId")
                        .HasName("fk_VARDEF_MODULETYPE1_idx");

                    b.HasIndex("VarNameId")
                        .HasName("fk_VARDEF_VARNAME1_idx");

                    b.HasIndex("VarTypeId")
                        .HasName("fk_VARDEF_VARTYPE1_idx");

                    b.ToTable("vardef");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Variable", b =>
                {
                    b.Property<int>("VariableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VariableID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("ModuleId")
                        .HasColumnName("ModuleID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Pub")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("VarDefId")
                        .HasColumnName("VarDefID")
                        .HasColumnType("int(11)");

                    b.HasKey("VariableId");

                    b.HasIndex("ModuleId")
                        .HasName("fk_VARIABLE_MODULE1_idx");

                    b.HasIndex("VarDefId")
                        .HasName("fk_VARIABLE_VARDEF1_idx");

                    b.ToTable("variable");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Varname", b =>
                {
                    b.Property<int>("VarNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VarNameID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("VarNameId");

                    b.ToTable("varname");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Vartype", b =>
                {
                    b.Property<int>("VarTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VarTypeID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("VarTypeId");

                    b.ToTable("vartype");
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Device", b =>
                {
                    b.HasOne("MeteovaRestApi.Models.Comtype", "ComType")
                        .WithMany("Device")
                        .HasForeignKey("ComTypeId")
                        .HasConstraintName("fk_DEVICE_COMTYPE1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeteovaRestApi.Models.Devicename", "DeviceName")
                        .WithMany("Device")
                        .HasForeignKey("DeviceNameId")
                        .HasConstraintName("fk_DEVICE_DEVICENAME1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Module", b =>
                {
                    b.HasOne("MeteovaRestApi.Models.Device", "Device")
                        .WithMany("Module")
                        .HasForeignKey("DeviceId")
                        .HasConstraintName("fk_MODULE_DEVICE1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeteovaRestApi.Models.Location", "Location")
                        .WithMany("Module")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("fk_MODULE_LOCATION1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeteovaRestApi.Models.Moduletype", "ModuleType")
                        .WithMany("Module")
                        .HasForeignKey("ModuleTypeId")
                        .HasConstraintName("fk_MODULE_MODULETYPE1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Moduletype", b =>
                {
                    b.HasOne("MeteovaRestApi.Models.Maker", "Maker")
                        .WithMany("Moduletype")
                        .HasForeignKey("MakerId")
                        .HasConstraintName("fk_MODULETYPE_MAKER1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Valint", b =>
                {
                    b.HasOne("MeteovaRestApi.Models.Variable", "Variable")
                        .WithMany("Valint")
                        .HasForeignKey("VariableId")
                        .HasConstraintName("fk_Int_Variable1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Valreal", b =>
                {
                    b.HasOne("MeteovaRestApi.Models.Variable", "Variable")
                        .WithMany("Valreal")
                        .HasForeignKey("VariableId")
                        .HasConstraintName("fk_Real_Variable1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Valstring", b =>
                {
                    b.HasOne("MeteovaRestApi.Models.Variable", "Variable")
                        .WithMany("Valstring")
                        .HasForeignKey("VariableId")
                        .HasConstraintName("fk_VALSTRING_VARIABLE1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Vardef", b =>
                {
                    b.HasOne("MeteovaRestApi.Models.Moduletype", "ModuleType")
                        .WithMany("Vardef")
                        .HasForeignKey("ModuleTypeId")
                        .HasConstraintName("fk_VARDEF_MODULETYPE1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeteovaRestApi.Models.Varname", "VarName")
                        .WithMany("Vardef")
                        .HasForeignKey("VarNameId")
                        .HasConstraintName("fk_VARDEF_VARNAME1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeteovaRestApi.Models.Vartype", "VarType")
                        .WithMany("Vardef")
                        .HasForeignKey("VarTypeId")
                        .HasConstraintName("fk_VARDEF_VARTYPE1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MeteovaRestApi.Models.Variable", b =>
                {
                    b.HasOne("MeteovaRestApi.Models.Module", "Module")
                        .WithMany("Variable")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("fk_VARIABLE_MODULE1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeteovaRestApi.Models.Vardef", "VarDef")
                        .WithMany("Variable")
                        .HasForeignKey("VarDefId")
                        .HasConstraintName("fk_VARIABLE_VARDEF1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
